/*
‚Ä¢	Exerc√≠cio 2
Escreva uma fun√ß√£o que pede ao usu√°rio o ano atual e seu ano de nascimento e 
imprima no console sua idade.
o	Dica
Voc√™ pode desconsiderar o m√™s de nascimento da pessoa. Ou seja,
assuma que ela j√° fez anivers√°rio no ano atual.
Al√©m disso, as perguntas devem ser feitas na ordem indicada!

Exemplo 1
Entradas
ano atual: 2020
ano de nascimento: 1990
*/


//var a = prompt("insira o ano atual")
//var b = prompt("Insira o ano que voc√™ nasceu")

/*
function idade (anoAtual, anoNascimento) {
  a = anoAtual
  b = anoNascimento
  const idadeAtual = (anoAtual - anoNascimento)
    return  idadeAtual
  }
console.log(idade(2020,1990));
*/

/*
function cumprimentar(pessoa){
	console.log(`Ol√° ${pessoa}! =)`)
}
const pessoa = prompt("Seu nome:")
cumprimentar(pessoa)
//cumprimentar("nome1") ou assim!
*/

/*

‚Ä¢	Exerc√≠cio 1
Escreva uma fun√ß√£o que pede ao usu√°rio a altura e a largura (nessa ordem) de um ret√¢ngulo e imprime no console a √°rea do ret√¢ngulo.
 
Entradas
altura: 3
largura: 5
Sa√≠da
15

function calculaAreaRetangulo(altura, largura) {
  // implemente sua l√≥gica aqui
  const areaRetangulo = altura * largura
  return (areaRetangulo)
 }
 console.log(calculaAreaRetangulo(3,5));
*/


//
/*
‚Ä¢	Exerc√≠cio 2
Escreva uma fun√ß√£o que pede ao usu√°rio o ano atual e seu ano de nascimento e imprima no console sua idade.
o	Dica
Voc√™ pode desconsiderar o m√™s de nascimento da pessoa. Ou seja, assuma que ela j√° fez anivers√°rio no ano atual.
Al√©m disso, as perguntas devem ser feitas na ordem indicada!
o	Exemplo 1
Entradas
ano atual: 2020
ano de nascimento: 1990
Sa√≠da
30

function imprimeIdade(anoAtual, anoNascimento) {
  // implemente sua l√≥gica aqui
  const idadeAtual = (anoAtual - anoNascimento)
  return  idadeAtual

}
console.log("Idade", imprimeIdade(2020, 1990));
*/

/*
‚Ä¢	Exerc√≠cio 3
Escreva uma fun√ß√£o que recebe o peso em kg e a altura em metros de uma pessoa e retorna o seu IMC (√çndice de Massa Corp√≥rea).
o	Dica
O IMC pode ser calculado de acordo com a f√≥rmula a seguir:
IMC = Peso √∑ (Altura √ó Altura)
Como essa conta n√£o d√° n√∫meros exatos, ser√£o aceitas respostas com uma diferen√ßa de 0.1 do valor esperado. Por exemplo, 
se o esperado para uma entrada espec√≠fica era 21.6, ser√£o aceitas respostas entre 21.5 e 21.7.
o	Exemplo 1
Entradas
peso: 85
altura: 1.8
Sa√≠da (aproximada)
26.2
o	Exemplo 2
Entradas
peso: 70
altura: 1.65
Sa√≠da
25.7

function calculaIMC(peso, alturaC) {
  // implemente sua l√≥gica aqui
  const imc = (peso / (alturaC ** alturaC)) 
  return imc
}
console.log("IMC", calculaIMC(85, 1.8))
*/

/*
‚Ä¢	Exerc√≠cio 4
Escreva uma fun√ß√£o que pede ao usu√°rio seu nome, sua idade e seu email (nessa ordem), 
e imprime no console uma mensagem como a seguinte:
Meu nome √© {nome}, tenho {idade} anos, e o meu email √© {email}.
o	Exemplo 1
Entradas
nome: "Alice"
idade: 28
email: "alice@gmail.com"
Sa√≠da (aproximada)
Meu nome √© Alice, tenho 28 anos, e o meu email √© alice@gmail.com
*/



function identificacao (nome,idade,email) {
  
  return  identificacao
  }
  const idade = prompt("seu nome")
  identificacao(nome)
  console.log(`Seu nome √© ${nome}, voc√™ tem ${idade} anos, e o seu email √© ${email}`)
  /*
  console.log(`Seu nome √© ${nome}, voc√™ tem ${idade} anos, e o seu email √© ${email}`)
  const idade = prompt("sua idade")
  identificacao(idade)
  const email = prompt("seu email")
  identificacao(email)
 */
  /*
  function cumprimentar(pessoa){
    console.log(`Ol√° ${pessoa}! =)`)
  }
  const pessoa = prompt("Seu nome:")
  cumprimentar(pessoa)
*/



/*
‚Ä¢	Exerc√≠cio 5
Escreva uma fun√ß√£o que pergunta ao usu√°rio suas tr√™s cores favoritas e imprime no console um array que contenha essas tr√™s cores.
o	Exemplo 1
Entradas
cor1: "Azul"
cor2: "Amarelo"
cor3: "Vermelho"
Sa√≠da
["Azul", "Amarelo", "Vermelho"]
o	Exemplo 2
Entradas
cor1: "Laranja"
cor2: "Roxo"
cor3: "Preto"
Sa√≠da
["Laranja", "Roxo", "Preto"]
*/
/*
function cumprimentar(pessoa){

	console.log(`Ol√° ${pessoa}! =)`)
}
//cumprimentar("nome1")
//cumprimentar("nome2")
//cumprimentar("nome3")

const pessoa = prompt("Seu nome:")
cumprimentar(pessoa)
*/


/*  RESOLVIDO
‚Ä¢	Exerc√≠cio 6
Escreva uma fun√ß√£o que recebe uma string e retorna ela em letra mai√∫scula.
o	Exemplo 1
Entradas
string: "oi"
Sa√≠da
"OI"
o	Exemplo 2
Entradas
string: "bAnAnA"
Sa√≠da
"BANANA"
*/


/*
‚Ä¢	Exerc√≠cio 7
Escreva uma fun√ß√£o que recebe o custo de um espet√°culo de teatro e o valor de cada ingresso 
(considere que todos os ingressos t√™m o mesmo pre√ßo) 
e retorna quantos ingressos precisam ser vendidos para que o espet√°culo n√£o d√™ preju√≠zo.
o	Exemplo 1
Entradas
custo: 3000
valor de cada ingresso: 100
Sa√≠da
30
o	Exemplo 2
Entradas
custo: 5500
valor de cada ingresso: 50
Sa√≠da
110
*/

/*
const pokemons = [
  {nome: 'Bulbasaur', tipo 'grama'},
  {nome: 'Charmander', tipo 'fogo'},
  {nome: 'Sqirtle', tipo: 'agua'}
]
for (const pkmn of pokemons) {
  console.log(`${pkmn.nome} √© de ${pkmn.tipo}`)
}
*/


/*
‚Ä¢	Exerc√≠cio 8
Escreva uma fun√ß√£o que recebe duas strings e retorna um booleano (true ou false) indicando se elas possuem o mesmo tamanho.
o	Exemplo 1
Entradas
string1: "ola"
string2: "abc"
Sa√≠da
true
o	Exemplo 2
Entradas
string1: "teste"
string2: "porta"
Sa√≠da
true
o	Exemplo 3
Entradas
string1: "abc"
string2: "abcd"
Sa√≠da
false
*/


/*
‚Ä¢	Exerc√≠cio 9
Escreva uma fun√ß√£o que recebe um array e retorna o primeiro elemento.
o	Exemplo 1
Entradas
array: [1, 2, 3]
Sa√≠da
1
o	Exemplo 2
Entradas
array: ["Laranja", "Banana", "Ma√ß√£"]
Sa√≠da
"Laranja"
*/


/*
‚Ä¢	Exerc√≠cio 10
Escreva uma fun√ß√£o que recebe um array e retorna o √∫ltimo elemento.
o	Exemplo 1
Entradas
array: [1, 2, 3, 4, 5]
Sa√≠da
5
o	Exemplo 2
Entradas
array: ["Laranja", "Banana", "Ma√ß√£"]
Sa√≠da
"Ma√ß√£"
*/


/*
‚Ä¢	Exerc√≠cio 11
Escreva uma fun√ß√£o que recebe um array e retorna um array com o primeiro e o √∫ltimo elemento trocados.
o	Exemplo 1
Entradas
array: [1, 2, 3, 4, 5]
Sa√≠da
[5, 2, 3, 4, 1]
o	Exemplo 2
Entradas
array: ["Laranja", "Banana", "Ma√ß√£"]
Sa√≠da
["Ma√ß√£", "Banana", "Laranja"]
*/



/*
‚Ä¢	Exerc√≠cio 12
Escreva uma fun√ß√£o que recebe duas strings e retorna um booleano (true ou false) 
indicando se elas s√£o iguais, desconsiderando letras mai√∫sculas ou min√∫sculas.
o	Exemplo 1
Entradas
string1: "Ola"
string2: "olA"
Sa√≠da
true
*/



/*
üèÖ DESAFIOS
‚Ä¢	Exerc√≠cio 13
Escreva uma fun√ß√£o que pergunta ao usu√°rio o ano atual, o ano de nascimento de uma pessoa, 
e o ano em que sua carteira de identidade foi emitida (nessa ordem). 
A fun√ß√£o deve imprimir no console um booleano (true ou false) 
que indica se a carteira precisa ser renovada ou n√£o. A carteira precisa ser renovada segundo os seguintes crit√©rios:
o	Para pessoas com menos de 20 anos, ou exatamente 20 anos, deve ser renovada de 5 em 5 anos 
(se for exatamente 5 anos, deve ser renovada).
o	Para pessoas entre 20 e 50 anos, ou exatamente 50, deve ser renovada de 10 em 10 anos 
(se for exatamente 10 anos, deve ser renovada).
o	Para pessoas acima dos 50 anos, deve ser renovada de 15 em 15 anos
o	Dica
Voc√™ deve usar comparadores e operadores booleanos para avaliar as condi√ß√µes. 
Para te ajudar a organizar a l√≥gica, tente criar 3 vari√°veis separadas, uma para cada condi√ß√£o, e depois compar√°-las.
o	Exemplo 1
Entradas
ano atual: 2020
ano de nascimento: 2000
ano de emissao do RG: 2015
Sa√≠da
true

‚Ä¢	Exerc√≠cio 14
Escreva uma fun√ß√£o que recebe um ano e retorna um booleano (true ou false) que indica se o ano √© bissexto. 
Um ano √© bissexto de acordo com as seguintes condi√ß√µes:
o	S√£o bissextos todos os anos m√∫ltiplos de 400**.**
o	S√£o bissextos todos os m√∫ltiplos de 4, exceto se for m√∫ltiplo de 100 mas n√£o de 400**.**
o	N√£o s√£o bissextos todos os demais anos.
o	Dica
Voc√™ deve usar comparadores e operadores booleanos para avaliar as condi√ß√µes. 
Para te ajudar a organizar a l√≥gica, tente criar 3 vari√°veis separadas, uma para cada condi√ß√£o, e depois compar√°-las.
o	Exemplo 1
Entradas
ano: 2000
Sa√≠da
true

‚Ä¢	Exerc√≠cio 15
Escreva uma fun√ß√£o que faz as seguintes perguntas ao usu√°rio 
(condi√ß√µes para ser uma pessoa estudante da Labenu):
o	Voc√™ tem mais de 18 anos?
o	Voc√™ possui ensino m√©dio completo?
o	Voc√™ possui disponibilidade exclusiva durante os hor√°rios do curso?
O usu√°rio deve responder essas perguntas com "sim" ou "nao".
A fun√ß√£o deve imprimir no console um booleano (true ou false) 
que indica se a inscri√ß√£o para o curso √© v√°lida, ou seja, 
se o usu√°rio pode ou n√£o fazer o curso da Labenu. 
A inscri√ß√£o √© v√°lida quando todas as respostas para todas as perguntas for positiva.
o	Exemplo 1
Entradas
tem mais de 18?: "sim"
tem ensino m√©dio completo?: "sim"
tem disponibilidade de hor√°rios?: "sim"
Sa√≠da
true

*/